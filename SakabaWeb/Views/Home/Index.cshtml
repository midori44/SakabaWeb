@model SakabaWeb.BossFormModel
@{
    ViewBag.Title = "BOSS召喚コマンド";
}

<h3>@ViewBag.Title</h3>
<p>
    ボスモンスター(@@boss)をsakaba.spaceのタイムライン上に出現させます。<br />
    自作のボスモンスターを使ってオリジナル設定を披露してみませんか？<br />
    <ul>
        <li>指定したライフポイントの値だけ返信(@@bossを含むトゥート)される、または30分経過で終了となります。</li>
        <li>ボスモンスター出現は同時に1体までのため、出現中に登録した場合は入力画面に戻ります。</li>
        <li>エラーにより入力が消える恐れがあるので、メモ帳などで作成してから貼り付けるのを推奨します。</li>
    </ul>
</p>
@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            <label class="control-label col-sm-3" for="Name">モンスターの名前 <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="uploadFiles">アイコン画像</label>
            <div class="col-sm-9">
                <input type="file" name="file" />
                @Html.ValidationMessage("file", "", new { @class = "text-danger" })
                <div>
                    未指定のときはデフォルト画像（黒背景に"BOSS"の文字）を使用します。
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3" for="VoiceAppear">登場時ボイス <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.VoiceAppear, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.VoiceAppear, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="VoiceDamage">被ダメージ時ボイス <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.VoiceDamage, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.VoiceDamage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="VoiceCounter">反撃時ボイス <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.VoiceCounter, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.VoiceCounter, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="VoiceDead">死亡時ボイス <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.VoiceDead, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.VoiceDead, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="DropItem">ドロップアイテム</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.DropItem, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DropItem, "", new { @class = "text-danger" })
                <div>
                    倒した際に落とすアイテムを指定できます（省略可）。<br />
                    戦闘後の会話を盛り上げるのに活用してください。
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3" for="LifePoint">ライフポイント <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.LifePoint, new { @class = "form-control", type = "Number", required = true, min = 1, max = 100, style = "width:120px" })
                @Html.ValidationMessageFor(model => model.LifePoint, "", new { @class = "text-danger" })
                <div>
                    リプライによるダメージを何回与えれば倒せるかを指定します。<br />
                    設定が高いと倒せなくなる恐れがあるので注意してください（TLの人数×2～3程度を推奨）。
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="EvadeRate">回避率 <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                <div class="input-group" style="width:120px">
                    @Html.TextBoxFor(model => model.EvadeRate, new { @class = "form-control", type = "Number", required = true, min = 0, max = 90 })
                    <span class="input-group-addon" style="background-color:#eee">%</span>
                </div>
                @Html.ValidationMessageFor(model => model.EvadeRate, "", new { @class = "text-danger" })
                <div>
                    リプライでダメージを与えられない確率を指定します。<br />
                    （回避が成功した場合は「○○は攻撃を回避した」と表示されます）<br />
                    設定が高いと倒せなくなる恐れがあるので注意してください（20%以下を推奨）。
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3" for="Weakness">弱点</label>
            <div class="col-sm-9">
                @Html.TextAreaFor(model => model.Weakness, 3, 40, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Weakness, "", new { @class = "text-danger" })
                <div>
                    【上級者向け】（省略可）<br />
                    特定ワードを含むリプライのときのみダメージを与えられるようにできます（絵文字は動作保証外）。<br />
                    （それ以外のリプライに対しては「ダメージを与えられない」と表示されます）<br />
                    例えば火に弱くしたい場合は 火, 炎, 燃, ファイア などを 改行区切り で入力してください。<br />
                    指定する場合は、戦闘中にヒントを出すなどのサポートをお願いします。
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">同意チェック <span class="label label-danger">必須</span></label>
            <div class="col-sm-9">
                <label style="margin-top: 6px;">
                    <input type="checkbox" value="1" required />
                    バトル終了まで進行役を務める
                </label>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <input type="submit" value="送信" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

